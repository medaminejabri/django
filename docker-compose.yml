version: '3.8'

services:
  web: &web
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - docker-compose.env
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"

  celery:
    <<: *web
    command: >
      sh -c "celery -A mydjangoproject worker --loglevel=info"
    env_file:
      - docker-compose.env
    depends_on:
      - rabbitmq
      - web
    ports: []

  flower:
    image: mher/flower:2.0.1
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - FLOWER_PORT=5555
    depends_on:
      - rabbitmq
    ports:
      - "5555:5555"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5677:5672"    # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  migration:
    build: .
    command: >
      sh -c "python manage.py migrate --no-input"
    env_file:
      - docker-compose.env
    depends_on:
      - db

  db:
    image: postgres:15
    tmpfs:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=jabri
      - POSTGRES_USER=mohamed
      - POSTGRES_DB=db2
    ports:
      - "5444:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mohamed -d db2"]
      interval: 10s
      timeout: 5s
      retries: 5
